#ifndef SCD30_H
#define SCD30_H
#include "stm32f0xx.h"

//////////////////////////////////////////////////////////////////////////////////////////////////////////
//NRF24L01???????
#define NRF_READ_REG    0x00  //??????,?5???????
#define NRF_WRITE_REG   0x20  //??????,?5???????
#define RD_RX_PLOAD     0x61  //?RX????,1~32??
#define WR_TX_PLOAD     0xA0  //?TX????,1~32??
#define FLUSH_TX        0xE1  //??TX FIFO???.??????
#define FLUSH_RX        0xE2  //??RX FIFO???.??????
#define REUSE_TX_PL     0xE3  //?????????,CE??,????????.
#define NOP             0xFF  //???,??????????	 
//SPI(NRF24L01)?????
#define CONFIG          0x00  //???????;bit0:1????,0????;bit1:???;bit2:CRC??;bit3:CRC??;
                              //bit4:??MAX_RT(??????????)??;bit5:??TX_DS??;bit6:??RX_DR??
#define EN_AA           0x01  //????????  bit0~5,????0~5
#define EN_RXADDR       0x02  //??????,bit0~5,????0~5
#define SETUP_AW        0x03  //??????(??????):bit1,0:00,3??;01,4??;02,5??;
#define SETUP_RETR      0x04  //??????;bit3:0,???????;bit7:4,?????? 250*x+86us
#define RF_CH           0x05  //RF??,bit6:0,??????;
#define RF_SETUP        0x06  //RF???;bit3:????(0:1Mbps,1:2Mbps);bit2:1,????;bit0:????????
#define STATUS          0x07  //?????;bit0:TX FIFO???;bit3:1,???????(??:6);bit4,???????
                              //bit5:????????;bit6:??????;
#define MAX_TX  		0x10  //??????????
#define TX_OK   		0x20  //TX??????
#define RX_OK   		0x40  //???????

#define OBSERVE_TX      0x08  //???????,bit7:4,????????;bit3:0,?????
#define CD              0x09  //???????,bit0,????;
#define RX_ADDR_P0      0x0A  //????0????,????5???,?????
#define RX_ADDR_P1      0x0B  //????1????,????5???,?????
#define RX_ADDR_P2      0x0C  //????2????,???????,???,???RX_ADDR_P1[39:8]??;
#define RX_ADDR_P3      0x0D  //????3????,???????,???,???RX_ADDR_P1[39:8]??;
#define RX_ADDR_P4      0x0E  //????4????,???????,???,???RX_ADDR_P1[39:8]??;
#define RX_ADDR_P5      0x0F  //????5????,???????,???,???RX_ADDR_P1[39:8]??;
#define TX_ADDR         0x10  //????(?????),ShockBurstTM???,RX_ADDR_P0??????
#define RX_PW_P0        0x11  //??????0??????(1~32??),???0???
#define RX_PW_P1        0x12  //??????1??????(1~32??),???0???
#define RX_PW_P2        0x13  //??????2??????(1~32??),???0???
#define RX_PW_P3        0x14  //??????3??????(1~32??),???0???
#define RX_PW_P4        0x15  //??????4??????(1~32??),???0???
#define RX_PW_P5        0x16  //??????5??????(1~32??),???0???
#define NRF_FIFO_STATUS 0x17  //FIFO?????;bit0,RX FIFO??????;bit1,RX FIFO???;bit2,3,??
                              //bit4,TX FIFO???;bit5,TX FIFO???;bit6,1,?????????.0,???;
//////////////////////////////////////////////////////////////////////////////////////////////////////////
typedef enum
{
  NRF24L01_pipe0      = (uint8_t)0,  
  NRF24L01_pipe1      = (uint8_t)1,
  NRF24L01_pipe2      = (uint8_t)2,
  NRF24L01_pipe3      = (uint8_t)3,
  NRF24L01_pipe4      = (uint8_t)4,
  NRF24L01_pipe5      = (uint8_t)5,
}NRF24L01_pipe_TypeDef;

//24L01??????????
#define SCD_ADDRESS    0xc2   	//0xC2,0xC3
#define SCD_CMD_START_MEASURE    0x0010   	//5???????
#define SCD_CMD_STOP_MEASURE  0x0104  		//5?????????
#define SCD_CMD_SET_INTERVAL  0x4600  		//5?????????
#define SCD_CMD_READ_STATUS  0x0202  		//5?????????
#define SCD_CMD_READ_MEASUREMENT  0x0300  		//5?????????
#define SCD_CMD_SWITCH_CAL  0x5306  		//5?????????
#define SCD_CMD_FORCE_CAL  0x5204  		//Set Forced Recalibration value (FRC)
#define SCD_CMD_TEMP_OFFSET  0x5403  		//Set Temperature Offset
#define SCD_CMD_ALT_COMPENSATION  0x5102  	//Altitude Compensation
#define SCD_CMD_READ_VERSION  0xD100  	        //Read firmware version
#define SCD_CMD_RESET  0xD304  	                //Soft reset

#define SCD_SCL_PIN      GPIO_Pin_6
#define SCD_SCL_PORT     GPIOB

#define SCD_SDA_PIN      GPIO_Pin_7
#define SCD_SDA_PORT     GPIOB

#define SCD_RDY_PIN      GPIO_Pin_2
#define SCD_RDY_PORT     GPIOB

void SCD30_Init(void);
void SCD30_ContinousMeasurewWithPressure(uint16_t pre);
void SCD30_StopContinousMeasure(void);
void SCD30_SetMeasurewInterval(uint16_t tim);
uint16_t SCD30_ReadMeasurewInterval(void);
#endif